// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ReactDebugFiberPerf captures all lifecycles 1`] = `
"⚛ (Waiting for async callback... will force flush in 5250 ms)

// Mount
⚛ (React Tree Reconciliation: Completed Root)
  ⚛ AllLifecycles [mount]
    ⚛ AllLifecycles.componentWillMount
    ⚛ AllLifecycles.getChildContext

⚛ (Committing Changes)
  ⚛ (Committing Snapshot Effects: 0 Total)
  ⚛ (Committing Host Effects: 1 Total)
  ⚛ (Calling Lifecycle Methods: 1 Total)
    ⚛ AllLifecycles.componentDidMount

⚛ (Waiting for async callback... will force flush in 5250 ms)

// Update
⚛ (React Tree Reconciliation: Completed Root)
  ⚛ AllLifecycles [update]
    ⚛ AllLifecycles.componentWillReceiveProps
    ⚛ AllLifecycles.shouldComponentUpdate
    ⚛ AllLifecycles.componentWillUpdate
    ⚛ AllLifecycles.getChildContext

⚛ (Committing Changes)
  ⚛ (Committing Snapshot Effects: 0 Total)
  ⚛ (Committing Host Effects: 2 Total)
  ⚛ (Calling Lifecycle Methods: 2 Total)
    ⚛ AllLifecycles.componentDidUpdate

⚛ (Waiting for async callback... will force flush in 5250 ms)

// Unmount
⚛ (React Tree Reconciliation: Completed Root)

⚛ (Committing Changes)
  ⚛ (Committing Snapshot Effects: 0 Total)
  ⚛ (Committing Host Effects: 1 Total)
    ⚛ AllLifecycles.componentWillUnmount
  ⚛ (Calling Lifecycle Methods: 0 Total)
"
`;

exports[`ReactDebugFiberPerf deduplicates lifecycle names during commit to reduce overhead 1`] = `
"⚛ (Waiting for async callback... will force flush in 5250 ms)

// The commit phase should mention A and B just once
⚛ (React Tree Reconciliation: Completed Root)
  ⚛ Parent [update]
    ⚛ A [update]
    ⚛ B [update]
    ⚛ A [update]
    ⚛ B [update]

⚛ (Committing Changes)
  ⚛ (Committing Snapshot Effects: 0 Total)
  ⚛ (Committing Host Effects: 9 Total)
  ⚛ (Calling Lifecycle Methods: 9 Total)
    ⚛ A.componentDidUpdate
    ⚛ B.componentDidUpdate

⚛ (Waiting for async callback... will force flush in 5250 ms)

// Because of deduplication, we don't know B was cascading,
// but we should still see the warning for the commit phase.
⚛ (React Tree Reconciliation: Completed Root)
  ⚛ Parent [update]
    ⚛ A [update]
    ⚛ B [update]
    ⚛ A [update]
    ⚛ B [update]

⛔ (Committing Changes) Warning: Lifecycle hook scheduled a cascading update
  ⚛ (Committing Snapshot Effects: 0 Total)
  ⚛ (Committing Host Effects: 9 Total)
  ⚛ (Calling Lifecycle Methods: 9 Total)
    ⚛ A.componentDidUpdate
    ⚛ B.componentDidUpdate

⚛ (React Tree Reconciliation: Completed Root)
  ⚛ B [update]

⚛ (Committing Changes)
  ⚛ (Committing Snapshot Effects: 0 Total)
  ⚛ (Committing Host Effects: 2 Total)
  ⚛ (Calling Lifecycle Methods: 2 Total)
    ⚛ B.componentDidUpdate
"
`;

exports[`ReactDebugFiberPerf does not include ConcurrentMode, StrictMode, or Profiler components in measurements 1`] = `
"⚛ (Waiting for async callback... will force flush in 5250 ms)

// Mount
⚛ (React Tree Reconciliation: Completed Root)
  ⚛ Profiler [mount]
    ⚛ Parent [mount]
      ⚛ Child [mount]

⚛ (Committing Changes)
  ⚛ (Committing Snapshot Effects: 0 Total)
  ⚛ (Committing Host Effects: 1 Total)
  ⚛ (Calling Lifecycle Methods: 0 Total)
"
`;

exports[`ReactDebugFiberPerf does not include context provider or consumer in measurements 1`] = `
"⚛ (Waiting for async callback... will force flush in 5250 ms)

// Mount
⚛ (React Tree Reconciliation: Completed Root)
  ⚛ Parent [mount]
    ⚛ Child [mount]

⚛ (Committing Changes)
  ⚛ (Committing Snapshot Effects: 0 Total)
  ⚛ (Committing Host Effects: 1 Total)
  ⚛ (Calling Lifecycle Methods: 0 Total)
"
`;

exports[`ReactDebugFiberPerf does not schedule an extra callback if setState is called during a synchronous commit phase 1`] = `
"⚛ (React Tree Reconciliation: Completed Root)
  ⚛ Component [mount]

⛔ (Committing Changes) Warning: Lifecycle hook scheduled a cascading update
  ⚛ (Committing Snapshot Effects: 0 Total)
  ⚛ (Committing Host Effects: 1 Total)
  ⚛ (Calling Lifecycle Methods: 1 Total)
    ⛔ Component.componentDidMount Warning: Scheduled a cascading update

⚛ (React Tree Reconciliation: Completed Root)
  ⚛ Component [update]

⚛ (Committing Changes)
  ⚛ (Committing Snapshot Effects: 0 Total)
  ⚛ (Committing Host Effects: 1 Total)
  ⚛ (Calling Lifecycle Methods: 1 Total)
"
`;

exports[`ReactDebugFiberPerf does not treat setState from cWM or cWRP as cascading 1`] = `
"⚛ (Waiting for async callback... will force flush in 5250 ms)

// Should not print a warning
⚛ (React Tree Reconciliation: Completed Root)
  ⚛ Parent [mount]
    ⚛ NotCascading [mount]
      ⚛ NotCascading.componentWillMount

⚛ (Committing Changes)
  ⚛ (Committing Snapshot Effects: 0 Total)
  ⚛ (Committing Host Effects: 1 Total)
  ⚛ (Calling Lifecycle Methods: 0 Total)

⚛ (Waiting for async callback... will force flush in 5250 ms)

// Should not print a warning
⚛ (React Tree Reconciliation: Completed Root)
  ⚛ Parent [update]
    ⚛ NotCascading [update]
      ⚛ NotCascading.componentWillReceiveProps

⚛ (Committing Changes)
  ⚛ (Committing Snapshot Effects: 0 Total)
  ⚛ (Committing Host Effects: 2 Total)
  ⚛ (Calling Lifecycle Methods: 2 Total)
"
`;

exports[`ReactDebugFiberPerf measures a simple reconciliation 1`] = `
"⚛ (Waiting for async callback... will force flush in 5250 ms)

// Mount
⚛ (React Tree Reconciliation: Completed Root)
  ⚛ Parent [mount]
    ⚛ Child [mount]

⚛ (Committing Changes)
  ⚛ (Committing Snapshot Effects: 0 Total)
  ⚛ (Committing Host Effects: 1 Total)
  ⚛ (Calling Lifecycle Methods: 0 Total)

⚛ (Waiting for async callback... will force flush in 5250 ms)

// Update
⚛ (React Tree Reconciliation: Completed Root)
  ⚛ Parent [update]
    ⚛ Child [update]

⚛ (Committing Changes)
  ⚛ (Committing Snapshot Effects: 0 Total)
  ⚛ (Committing Host Effects: 2 Total)
  ⚛ (Calling Lifecycle Methods: 2 Total)

⚛ (Waiting for async callback... will force flush in 5250 ms)

// Unmount
⚛ (React Tree Reconciliation: Completed Root)

⚛ (Committing Changes)
  ⚛ (Committing Snapshot Effects: 0 Total)
  ⚛ (Committing Host Effects: 1 Total)
  ⚛ (Calling Lifecycle Methods: 0 Total)
"
`;

exports[`ReactDebugFiberPerf measures deferred work in chunks 1`] = `
"⚛ (Waiting for async callback... will force flush in 5250 ms)

// Start mounting Parent and A
⚛ (React Tree Reconciliation: Yielded)
  ⚛ Parent [mount]
    ⚛ A [mount]
      ⚛ Child [mount]

⚛ (Waiting for async callback... will force flush in 5250 ms)

// Mount B just a little (but not enough to memoize)
⚛ (React Tree Reconciliation: Yielded)
  ⚛ Parent [mount]
    ⚛ B [mount]

⚛ (Waiting for async callback... will force flush in 5250 ms)

// Complete B and Parent
⚛ (React Tree Reconciliation: Completed Root)
  ⚛ Parent [mount]
    ⚛ B [mount]
      ⚛ Child [mount]

⚛ (Committing Changes)
  ⚛ (Committing Snapshot Effects: 0 Total)
  ⚛ (Committing Host Effects: 1 Total)
  ⚛ (Calling Lifecycle Methods: 0 Total)
"
`;

exports[`ReactDebugFiberPerf measures deprioritized work 1`] = `
"// Flush the parent
⚛ (React Tree Reconciliation: Completed Root)
  ⚛ Parent [mount]

⚛ (Committing Changes)
  ⚛ (Committing Snapshot Effects: 0 Total)
  ⚛ (Committing Host Effects: 1 Total)
  ⚛ (Calling Lifecycle Methods: 0 Total)

⚛ (Waiting for async callback... will force flush in 10737418210 ms)

// Flush the child
⚛ (React Tree Reconciliation: Completed Root)
  ⚛ Child [mount]

⚛ (Committing Changes)
  ⚛ (Committing Snapshot Effects: 0 Total)
  ⚛ (Committing Host Effects: 1 Total)
  ⚛ (Calling Lifecycle Methods: 0 Total)
"
`;

exports[`ReactDebugFiberPerf properly displays the forwardRef component in measurements 1`] = `
"⚛ (Waiting for async callback... will force flush in 5250 ms)

// Mount
⚛ (React Tree Reconciliation: Completed Root)
  ⚛ Parent [mount]
    ⚛ ForwardRef [mount]
      ⚛ Child [mount]
    ⚛ ForwardRef(refForwarder) [mount]
      ⚛ Child [mount]
    ⚛ ForwardRef(OverriddenName) [mount]
      ⚛ Child [mount]

⚛ (Committing Changes)
  ⚛ (Committing Snapshot Effects: 0 Total)
  ⚛ (Committing Host Effects: 1 Total)
  ⚛ (Calling Lifecycle Methods: 0 Total)
"
`;

exports[`ReactDebugFiberPerf recovers from caught errors 1`] = `
"⚛ (Waiting for async callback... will force flush in 5250 ms)

// Stop on Baddie and restart from Boundary
⚛ (React Tree Reconciliation: Completed Root)
  ⚛ Parent [mount]
    ⛔ Boundary [mount] Warning: An error was thrown inside this error boundary
      ⚛ Parent [mount]
        ⚛ Baddie [mount]
    ⚛ Boundary [mount]

⚛ (React Tree Reconciliation: Completed Root)
  ⚛ Parent [mount]
    ⛔ Boundary [mount] Warning: An error was thrown inside this error boundary
      ⚛ Parent [mount]
        ⚛ Baddie [mount]
    ⚛ Boundary [mount]

⛔ (Committing Changes) Warning: Lifecycle hook scheduled a cascading update
  ⚛ (Committing Snapshot Effects: 0 Total)
  ⚛ (Committing Host Effects: 2 Total)
  ⚛ (Calling Lifecycle Methods: 1 Total)

⚛ (React Tree Reconciliation: Completed Root)
  ⚛ Boundary [update]
    ⚛ ErrorReport [mount]

⚛ (Committing Changes)
  ⚛ (Committing Snapshot Effects: 0 Total)
  ⚛ (Committing Host Effects: 1 Total)
  ⚛ (Calling Lifecycle Methods: 0 Total)
"
`;

exports[`ReactDebugFiberPerf recovers from fatal errors 1`] = `
"⚛ (Waiting for async callback... will force flush in 5250 ms)

// Will fatal
⚛ (React Tree Reconciliation: Completed Root)
  ⚛ Parent [mount]
    ⚛ Baddie [mount]

⚛ (React Tree Reconciliation: Completed Root)
  ⚛ Parent [mount]
    ⚛ Baddie [mount]

⚛ (Committing Changes)
  ⚛ (Committing Snapshot Effects: 0 Total)
  ⚛ (Committing Host Effects: 1 Total)
  ⚛ (Calling Lifecycle Methods: 1 Total)

⚛ (Waiting for async callback... will force flush in 5250 ms)

// Will reconcile from a clean state
⚛ (React Tree Reconciliation: Completed Root)
  ⚛ Parent [mount]
    ⚛ Child [mount]

⚛ (Committing Changes)
  ⚛ (Committing Snapshot Effects: 0 Total)
  ⚛ (Committing Host Effects: 1 Total)
  ⚛ (Calling Lifecycle Methods: 0 Total)
"
`;

exports[`ReactDebugFiberPerf skips parents during setState 1`] = `
"⚛ (Waiting for async callback... will force flush in 5250 ms)

// Should include just A and B, no Parents
⚛ (React Tree Reconciliation: Completed Root)
  ⚛ A [update]
  ⚛ B [update]

⚛ (Committing Changes)
  ⚛ (Committing Snapshot Effects: 0 Total)
  ⚛ (Committing Host Effects: 2 Total)
  ⚛ (Calling Lifecycle Methods: 2 Total)
"
`;

exports[`ReactDebugFiberPerf supports Suspense and lazy 1`] = `
"⚛ (Waiting for async callback... will force flush in 5250 ms)

⚛ (React Tree Reconciliation: Completed Root)
  ⚛ Parent [mount]
    ⛔ Suspense [mount] Warning: Rendering was suspended
    ⚛ Suspense [mount]
      ⚛ Spinner [mount]
"
`;

exports[`ReactDebugFiberPerf supports Suspense and lazy 2`] = `
"⚛ (Waiting for async callback... will force flush in 5250 ms)

⚛ (React Tree Reconciliation: Completed Root)
  ⚛ Parent [mount]
    ⛔ Suspense [mount] Warning: Rendering was suspended
    ⚛ Suspense [mount]
      ⚛ Spinner [mount]

⚛ (Waiting for async callback... will force flush in 5250 ms)

⚛ (React Tree Reconciliation: Completed Root)
  ⚛ Parent [mount]
    ⚛ Suspense [mount]
      ⚛ Foo [mount]

⚛ (Committing Changes)
  ⚛ (Committing Snapshot Effects: 0 Total)
  ⚛ (Committing Host Effects: 1 Total)
  ⚛ (Calling Lifecycle Methods: 0 Total)
"
`;

exports[`ReactDebugFiberPerf supports portals 1`] = `
"⚛ (Waiting for async callback... will force flush in 5250 ms)

⚛ (React Tree Reconciliation: Completed Root)
  ⚛ Parent [mount]
    ⚛ Child [mount]

⚛ (Committing Changes)
  ⚛ (Committing Snapshot Effects: 0 Total)
  ⚛ (Committing Host Effects: 2 Total)
  ⚛ (Calling Lifecycle Methods: 0 Total)
"
`;

exports[`ReactDebugFiberPerf supports memo 1`] = `
"⚛ (Waiting for async callback... will force flush in 5250 ms)

⚛ (React Tree Reconciliation: Completed Root)
  ⚛ Parent [mount]
    ⚛ Foo [mount]

⚛ (Committing Changes)
  ⚛ (Committing Snapshot Effects: 0 Total)
  ⚛ (Committing Host Effects: 1 Total)
  ⚛ (Calling Lifecycle Methods: 0 Total)
"
`;

exports[`ReactDebugFiberPerf warns if an in-progress update is interrupted 1`] = `
"⚛ (Waiting for async callback... will force flush in 5250 ms)

⚛ (React Tree Reconciliation: Yielded)
  ⚛ Foo [mount]

⚛ (Waiting for async callback... will force flush in 5250 ms)
  ⛔ (React Tree Reconciliation: Completed Root) Warning: A top-level update interrupted the previous render
    ⚛ Foo [mount]
  ⚛ (Committing Changes)
    ⚛ (Committing Snapshot Effects: 0 Total)
    ⚛ (Committing Host Effects: 1 Total)
    ⚛ (Calling Lifecycle Methods: 0 Total)

⚛ (React Tree Reconciliation: Completed Root)

⚛ (Committing Changes)
  ⚛ (Committing Snapshot Effects: 0 Total)
  ⚛ (Committing Host Effects: 0 Total)
  ⚛ (Calling Lifecycle Methods: 0 Total)
"
`;

exports[`ReactDebugFiberPerf warns if async work expires (starvation) 1`] = `
"⛔ (Waiting for async callback... will force flush in 5250 ms) Warning: React was blocked by main thread

⚛ (React Tree Reconciliation: Completed Root)
  ⚛ Foo [mount]

⚛ (Committing Changes)
  ⚛ (Committing Snapshot Effects: 0 Total)
  ⚛ (Committing Host Effects: 1 Total)
  ⚛ (Calling Lifecycle Methods: 0 Total)
"
`;

exports[`ReactDebugFiberPerf warns on cascading renders from setState 1`] = `
"⚛ (Waiting for async callback... will force flush in 5250 ms)

// Should print a warning
⚛ (React Tree Reconciliation: Completed Root)
  ⚛ Parent [mount]
    ⚛ Cascading [mount]

⛔ (Committing Changes) Warning: Lifecycle hook scheduled a cascading update
  ⚛ (Committing Snapshot Effects: 0 Total)
  ⚛ (Committing Host Effects: 2 Total)
  ⚛ (Calling Lifecycle Methods: 1 Total)
    ⛔ Cascading.componentDidMount Warning: Scheduled a cascading update

⚛ (React Tree Reconciliation: Completed Root)
  ⚛ Cascading [update]

⚛ (Committing Changes)
  ⚛ (Committing Snapshot Effects: 0 Total)
  ⚛ (Committing Host Effects: 1 Total)
  ⚛ (Calling Lifecycle Methods: 1 Total)
"
`;

exports[`ReactDebugFiberPerf warns on cascading renders from top-level render 1`] = `
"⚛ (Waiting for async callback... will force flush in 5250 ms)

// Rendering the first root
⚛ (React Tree Reconciliation: Completed Root)
  ⚛ Cascading [mount]

⛔ (Committing Changes) Warning: Lifecycle hook scheduled a cascading update
  ⚛ (Committing Snapshot Effects: 0 Total)
  ⚛ (Committing Host Effects: 1 Total)
  ⚛ (Calling Lifecycle Methods: 1 Total)
    ⛔ Cascading.componentDidMount Warning: Scheduled a cascading update

// Scheduling another root from componentDidMount
⚛ (React Tree Reconciliation: Completed Root)
  ⚛ Child [mount]

⚛ (Committing Changes)
  ⚛ (Committing Snapshot Effects: 0 Total)
  ⚛ (Committing Host Effects: 1 Total)
  ⚛ (Calling Lifecycle Methods: 0 Total)
"
`;
