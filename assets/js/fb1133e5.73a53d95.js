"use strict";(self.webpackChunkreact_note_docusaurus=self.webpackChunkreact_note_docusaurus||[]).push([[6794],{3905:function(e,t,n){n.d(t,{Zo:function(){return o},kt:function(){return f}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function u(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?u(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):u(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},u=Object.keys(e);for(a=0;a<u.length;a++)n=u[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var u=Object.getOwnPropertySymbols(e);for(a=0;a<u.length;a++)n=u[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),i=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},o=function(e){var t=i(e.components);return a.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,u=e.originalType,l=e.parentName,o=s(e,["components","mdxType","originalType","parentName"]),d=i(n),f=r,m=d["".concat(l,".").concat(f)]||d[f]||c[f]||u;return n?a.createElement(m,p(p({ref:t},o),{},{components:n})):a.createElement(m,p({ref:t},o))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var u=n.length,p=new Array(u);p[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,p[1]=s;for(var i=2;i<u;i++)p[i]=n[i];return a.createElement.apply(null,p)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2840:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return i},toc:function(){return o},default:function(){return d}});var a=n(7462),r=n(3366),u=(n(7294),n(3905)),p=["components"],s={id:"multi-setstate",sidebar_label:"\u591a\u6b21\u6267\u884csetState\u7684\u66f4\u65b0\u673a\u5236",slug:"/react/react/reconciler/multi-setstate",sidebar_position:8,title:""},l=void 0,i={unversionedId:"react/react/reconciler/multi-setstate",id:"react/react/reconciler/multi-setstate",isDocsHomePage:!1,title:"",description:"\u6982\u8ff0\uff0c\u80cc\u666f",source:"@site/docs/react/react/reconciler/\u591a\u6b21\u6267\u884csetState\u7684\u66f4\u65b0\u673a\u5236.md",sourceDirName:"react/react/reconciler",slug:"/react/react/reconciler/multi-setstate",permalink:"/ReactNote/docs/react/react/reconciler/multi-setstate",editUrl:"https://github.com/BUPTlhuanyu/ReactNote/tree/master/docs/react/react/reconciler/\u591a\u6b21\u6267\u884csetState\u7684\u66f4\u65b0\u673a\u5236.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{id:"multi-setstate",sidebar_label:"\u591a\u6b21\u6267\u884csetState\u7684\u66f4\u65b0\u673a\u5236",slug:"/react/react/reconciler/multi-setstate",sidebar_position:8,title:""},sidebar:"react",previous:{title:"\u5230\u671f\u65f6\u95f4",permalink:"/ReactNote/docs/react/react/reconciler/expiration-time"},next:{title:"ReactFiberLazyComponent",permalink:"/ReactNote/docs/react/react/reconciler/react-fiber-lazy-component"}},o=[],c={toc:o};function d(e){var t=e.components,n=(0,r.Z)(e,p);return(0,u.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,u.kt)("h4",{id:"\u6982\u8ff0\u80cc\u666f"},"\u6982\u8ff0\uff0c\u80cc\u666f"),(0,u.kt)("pre",null,(0,u.kt)("code",{parentName:"pre"},"state\u521d\u59cb\u503c\u4e3a{a:1}\n\u95ee\u98981\uff1a\u6700\u7ec8state\u4f1a\u662f\u591a\u5c11\nclickHandler(){\n    this.setState({\n        a : 2\n    })\n    this.setState({\n        a : 3\n    })\n    this.setState({\n        a : 4\n    })\n    this.setState({\n        a : 5\n    })\n}\n\n\u95ee\u98982\uff1a\u6700\u7ec8state\u4f1a\u662f\u591a\u5c11\nclickHandler(){\n    this.setState((prevState, nextProps) => {\n      return {a:prevState.a + 1};\n    })\n    this.setState((prevState, nextProps) => {\n      return {a:prevState.a + 1};\n    })\n    this.setState((prevState, nextProps) => {\n      return {a:prevState.a + 1};\n    })\n    this.setState((prevState, nextProps) => {\n      return {a:prevState.a + 1};\n    })\n}\n")),(0,u.kt)("p",null,"\u6ce8\u610f\u672c\u6587\u5c06\u4e0e\u4e4b\u524d\u7684\u6587\u7ae0",(0,u.kt)("a",{parentName:"p",href:"http://note.youdao.com/noteshare?id=84df98e9c1e5cb9d1a66864b34268a7f&sub=1E16F316E66348EB945206AE4746119A"},"2-6-2\u3001\u5bf9\u7c7b\u7ec4\u4ef6\u6267\u884cupdateClassComponent"),"\u7d27\u5bc6\u76f8\u5173\u3002"),(0,u.kt)("p",null,(0,u.kt)("strong",{parentName:"p"},"\u9605\u8bfb\u672c\u6587\u9700\u8981\u7279\u522b\u5173\u6ce8\u7684\u662f"),"\uff1a"),(0,u.kt)("ol",null,(0,u.kt)("li",{parentName:"ol"},"\u5982\u4e0b\u591a\u4e2asetState\u540c\u6b65\u7684\u6267\u884c\u7684\u65f6\u5019\uff0c\u66f4\u65b0\u4efb\u52a1\u7684\u5230\u671f\u65f6\u95f4\u662f\u76f8\u540c\u7684")),(0,u.kt)("pre",null,(0,u.kt)("code",{parentName:"pre"},"\u539f\u56e0\uff1a\u540c\u4e00\u4e8b\u4ef6\u4e2d\u591a\u6b21\u540c\u6b65\u6267\u884csetState\u7684\u5230\u671f\u65f6\u95f4\u90fd\u662f\u76f8\u540c\u7684\nThere's already pending work. We might be in the middle of a browser\nevent. If we were to read the current time, it could cause multiple updates\nwithin the same event to receive different expiration times, leading to\ntearing. Return the last read time. During the next idle callback, the\ntime will be updated\n")),(0,u.kt)("ol",{start:2},(0,u.kt)("li",{parentName:"ol"},"\u5f53\u524dfiber\u7684\u5230\u671f\u65f6\u95f4expirationTime\u4f1a\u88ab\u8bbe\u7f6e\u4e3a\u4e0e\u7c7b\u7ec4\u4ef6setState\u4ea7\u751f\u7684\u66f4\u65b0\u4efb\u52a1\u76f8\u540c\u7684\u5230\u671f\u65f6\u95f4")),(0,u.kt)("h4",{id:"\u5fc5\u8981\u7684\u56de\u987e\u4e0e\u51c6\u5907"},"\u5fc5\u8981\u7684\u56de\u987e\u4e0e\u51c6\u5907"),(0,u.kt)("p",null,"\u56de\u987e\u7c7b\u7ec4\u4ef6\u7684\u5b9e\u4f8b\u5316\uff0c\u7ed9\u51fa\u4e00\u4e9bsetState\u76f8\u5173\u7684\u51c6\u5907\u5de5\u4f5c\u3002"),(0,u.kt)("blockquote",null,(0,u.kt)("p",{parentName:"blockquote"},"\u5728\u6267\u884cReactDOM.render\u6784\u5efafiber\u6811\u7684\u65f6\u5019\uff0c\u9047\u5230\u7c7b\u7c7b\u578b\u7684\u7ec4\u4ef6\uff0c\u4f1a\u8c03\u7528updateClassComponent\uff0c\u8be5\u51fd\u6570\u4f1a\u5728\u7ec4\u4ef6\u6302\u8f7d\u751f\u547d\u5468\u671f\u4e2d\u8c03\u7528constructClassInstance\u5b9e\u4f8b\u5316\u7c7b\u7c7b\u578b\u7ec4\u4ef6\u3002")),(0,u.kt)("p",null,"updateClassComponent\u6240\u5728\u8def\u5f84\uff1areact\\packages\\react-reconciler\\src\\ReactFiberBeginWork.js"),(0,u.kt)("blockquote",null,(0,u.kt)("p",{parentName:"blockquote"},"constructClassInstance\u6784\u5efa\u7c7b\u7ec4\u4ef6\u7684\u5b9e\u4f8b\u7136\u540e\u8c03\u7528adoptClassInstance(workInProgress, instance)\u7ed9\u4f20\u5165\u7684instance\u6dfb\u52a0\u66f4\u65b0\u5668updater\u5c5e\u6027\u503c\u4e3aclassComponentUpdater\uff0c\u8fd9\u4e2aclassComponentUpdater\u5728\u8be5\u6587\u4ef6\u4e2d\u662f\u4e00\u4e2a\u5305\u542b\u591a\u4e2a\u5c5e\u6027\u7684 \u5bf9\u8c61\uff0c\u4e3b\u8981\u7528\u4e8e\u5b58\u653e\u66f4\u65b0\u4efb\u52a1\u76f8\u5173\u903b\u8f91")),(0,u.kt)("p",null,"constructClassInstance\u51fd\u6570\u6240\u5728\u8def\u5f84\uff1areact\\packages\\react-reconciler\\src\\ReactFiberClassComponent.js\n\u3002"),(0,u.kt)("pre",null,(0,u.kt)("code",{parentName:"pre"},"const classComponentUpdater = {\n  isMounted,\n  enqueueSetState(inst, payload, callback) {\n      ...\n  },\n  enqueueReplaceState(inst, payload, callback) {\n      ...\n  },\n  enqueueForceUpdate(inst, callback) {\n     ...\n};\n")),(0,u.kt)("p",null,"setState\u662f\u4f9d\u8d56enqueueSetState\u6765\u6267\u884c\u66f4\u65b0\u7684,enqueueSetState\u4ee3\u7801\u5728\u4e0b\u9762\u7684\u5206\u6790\u4e2d\u4f1a\u7ed9\u51fa\u3002"),(0,u.kt)("h4",{id:"\u4ecesetstate\u65b9\u6cd5\u5207\u5165"},"\u4ecesetState\u65b9\u6cd5\u5207\u5165"),(0,u.kt)("p",null,"setState\u65b9\u6cd5\uff1a"),(0,u.kt)("pre",null,(0,u.kt)("code",{parentName:"pre"},"Component.prototype.setState = function(partialState, callback) {\n    ...\n  this.updater.enqueueSetState(this, partialState, callback, 'setState');\n};\n")),(0,u.kt)("p",null,"\u5728\u4e0a\u8ff0\u65b9\u6cd5\u4e2d\uff0c\u5fc5\u987b\u8981\u4ecb\u7ecd\u4e00\u4e0b\u53c2\u6570\u4ee3\u8868\u7684\u610f\u4e49\uff1a"),(0,u.kt)("pre",null,(0,u.kt)("code",{parentName:"pre"},"partialState\uff1a\u4f20\u5165setState\u65b9\u6cd5\u7684\u65b0\u7684state\u5bf9\u8c61\ncallback\uff1astate\u66f4\u65b0\u4e4b\u540e\u7684\u56de\u8c03\u51fd\u6570\n")),(0,u.kt)("p",null,"\u5728\u7c7b\u7ec4\u4ef7\u4e2d\u8c03\u7528setState\u4f1a\u76f4\u63a5\u8c03\u7528\u5b9e\u4f8b\u4e0aupdater\u7684enqueueSetState\u65b9\u6cd5\uff0c\u5176\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,u.kt)("pre",null,(0,u.kt)("code",{parentName:"pre"},"enqueueSetState(inst, payload, callback) {\n  //\u83b7\u53d6\u5b9e\u4f8b\u5bf9\u5e94\u7684fiber\n  const fiber = ReactInstanceMap.get(inst);\n  //\u8ba1\u7b97\u5f53\u524d\u65f6\u95f4:react\u786e\u4fdd\u4e86\u5728\u540c\u4e00\u4e2a\u65f6\u95f4\u4e2d\u6240\u6709\u7684\u66f4\u65b0\u90fd\u662f\u76f8\u540c\u7684\u5230\u671f\u65f6\u95f4\n  const currentTime = requestCurrentTime();\n  //\u6839\u636e\u5f53\u524d\u65f6\u95f4\u4e0efiber\u8ba1\u7b97\u5230\u671f\u65f6\u95f4\n  const expirationTime = computeExpirationForFiber(currentTime, fiber);\n  //\u4f20\u5165\u4e00\u4e2a\u5230\u671f\u65f6\u95f4\uff0c\u8fd4\u56de\u4e00\u4e2a\u5bf9\u8c61\uff0c\u89c1packages\\react-reconciler\\src\\ReactUpdateQueue.js\n  const update = createUpdate(expirationTime);\n  //\u5229\u7528\u65b0\u7684state\u4fee\u6539update.payload\n  update.payload = payload;\n  //\u5229\u7528callback\u4fee\u6539update.callback\n  if (callback !== undefined && callback !== null) {\n    if (__DEV__) {\n      warnOnInvalidCallback(callback, 'setState');\n    }\n    update.callback = callback;\n  }\n  //\uff1f\uff1f\uff1f\u5b58\u7591\uff0c\u8c03\u7528scheduler\u5220\u9664\u5f53\u524d\u67d0\u4e2a\u4efb\u52a1\uff0c\u8fd9\u91cc\u5148\u4e0d\u8ba8\u8bba\n  flushPassiveEffects();\n  //\u5f00\u59cb\u8c03\u5ea6setState\u5e26\u6765\u7684\u66f4\u65b0\n  enqueueUpdate(fiber, update);\n  //\u5f00\u59cb\u8c03\u5ea6\u65b0\u7684\u5f53\u524dfiber\u5b50\u6811\uff0c\u8bbe\u7f6e\u76f8\u5173\u7684\u5230\u671f\u65f6\u95f4\u7b49\u7b49,\u8fd9\u91cc\u5173\u952e\u662f\u4f1a\u7ed9\u5f53\u524dfiber\u8bbe\u7f6eexpirationTime\u4e3asetState\u7684\u66f4\u65b0\u4efb\u52a1\u76f8\u540c\u7684\u503c\n  scheduleWork(fiber, expirationTime);\n}\n")),(0,u.kt)("h4",{id:"enqueueupdate"},"enqueueUpdate"),(0,u.kt)("blockquote",null,(0,u.kt)("p",{parentName:"blockquote"},"enqueueUpdate\u4e3afiber\u6784\u5efaupdateQueue\u961f\u5217\uff0c\u591a\u4e2asetState\u7684\u6548\u679c\u662f\u591a\u4e2a\u5177\u5907\u76f8\u540c\u5230\u671f\u65f6\u95f4\u7684update\u90fd\u88ab\u6dfb\u52a0\u5230\u961f\u5217\u4e2d")),(0,u.kt)("p",null,"\u4f9d\u8d56\u7684\u51fd\u6570\uff1a"),(0,u.kt)("ul",null,(0,u.kt)("li",{parentName:"ul"},"createUpdateQueue\u8fd4\u56de\u4e00\u4e2aUpdateQueue\u7c7b\u578b\u7684\u5bf9\u8c61\uff08\u8be5\u5bf9\u8c61\u662f\u7531update\u7ec4\u6210\u7684\u961f\u5217\uff09\uff0c\u4f20\u5165\u7684state\u5b58\u653e\u5230baseState\u5c5e\u6027\u4e0a\u3002"),(0,u.kt)("li",{parentName:"ul"},"appendUpdateToQueue\u5c06\u4f20\u5165\u7684update\u6dfb\u52a0\u5230\u4f20\u5165\u7684update\u961f\u5217\u5373queue\u7684\u6700\u540e\u3002"),(0,u.kt)("li",{parentName:"ul"},"cloneUpdateQueue\u8fd4\u56de\u4f20\u5165\u7684update\u961f\u5217\u7684\u514b\u9686\u7248\uff0c\u8fd4\u56de\u7684\u961f\u5217\u4e0e\u4f20\u5165\u7684\u961f\u5217\u7684firstUpdate\u6307\u5411\u540c\u4e00\u4e2a\u5bf9\u8c61\uff0clastUpdate\u4e5f\u6307\u5411\u540c\u4e00\u4e2a\u5bf9\u8c61\u3002")),(0,u.kt)("pre",null,(0,u.kt)("code",{parentName:"pre"},"export function createUpdateQueue<State>(baseState: State): UpdateQueue<State> {\n  const queue: UpdateQueue<State> = {\n    baseState,\n    firstUpdate: null,\n    lastUpdate: null,\n    firstCapturedUpdate: null,\n    lastCapturedUpdate: null,\n    firstEffect: null,\n    lastEffect: null,\n    firstCapturedEffect: null,\n    lastCapturedEffect: null,\n  };\n  return queue;\n}\n\nfunction appendUpdateToQueue<State>(\n  queue: UpdateQueue<State>,\n  update: Update<State>,\n) {\n  // Append the update to the end of the list.\n  if (queue.lastUpdate === null) {\n    // Queue is empty\n    queue.firstUpdate = queue.lastUpdate = update;\n  } else {\n    queue.lastUpdate.next = update;\n    queue.lastUpdate = update;\n  }\n}\n\nfunction cloneUpdateQueue<State>(\n  currentQueue: UpdateQueue<State>,\n): UpdateQueue<State> {\n  const queue: UpdateQueue<State> = {\n    baseState: currentQueue.baseState,\n    firstUpdate: currentQueue.firstUpdate,\n    lastUpdate: currentQueue.lastUpdate,\n\n    // TODO: With resuming, if we bail out and resuse the child tree, we should\n    // keep these effects.\n    firstCapturedUpdate: null,\n    lastCapturedUpdate: null,\n\n    firstEffect: null,\n    lastEffect: null,\n\n    firstCapturedEffect: null,\n    lastCapturedEffect: null,\n  };\n  return queue;\n}\n")),(0,u.kt)("p",null,"enqueueUpdate\u7684\u4f5c\u7528\u662f\u5c06\u4f20\u5165\u7684\u66f4\u65b0\u4efb\u52a1\uff08\u5305\u542b\u65b0state\u4ee5\u53ca\u5230\u671f\u65f6\u95f4\u7684\u5bf9\u8c61\uff09\u6dfb\u52a0\u5230\u66f4\u65b0\u961f\u5217\u3002"),(0,u.kt)("pre",null,(0,u.kt)("code",{parentName:"pre"},"export function enqueueUpdate<State>(fiber: Fiber, update: Update<State>) {\n  // Update queues are created lazily.\n  // \u4f7f\u7528alternate\u5c5e\u6027\u53cc\u5411\u8fde\u63a5\u4e00\u4e2a\u5f53\u524dfiber\u548c\u5176work-in-progress\uff0c\u5f53\u524dfiber\u5b9e\u4f8b\u7684alternate\u5c5e\u6027\u6307\u5411\u5176work-in-progress\uff0cwork-in-progress\u7684alternate\u5c5e\u6027\u6307\u5411\u5f53\u524d\u7a33\u5b9afiber\u3002\n  const alternate = fiber.alternate;\n  let queue1;\n  let queue2;\n  if (alternate === null) {\n    // There's only one fiber.\n    queue1 = fiber.updateQueue;\n    queue2 = null;\n    if (queue1 === null) {\n      //\u5982\u679c\u5f53\u524d\u7ec4\u4ef6\u6ca1\u6709\u7b49\u5f85setState\u7684\u961f\u5217\u5219\u521b\u5efa\u4e00\u4e2a\uff0c\n        // \u5229\u7528fiber\u5f53\u524d\u5df2\u7ecf\u8bb0\u5f55\u5e76\u9700\u8981\u6574\u5408\u7684state\u5b58\u50a8\u5230queue1\u4e0efiber.updateQueue\n      queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState);\n    }\n  } else {\n    // There are two owners.\n    // \u5982\u679cfiber\u6811\u4ee5\u53caworkinprogress\u6811\u90fd\u5b58\u5728\uff0c\u4e0b\u9762\u7684\u903b\u8f91\u5219\u4f1a\u540c\u6b65\u4e24\u4e2a\u6811\u7684update\u961f\u5217\n    queue1 = fiber.updateQueue;\n    queue2 = alternate.updateQueue;\n    // \u5f53\u4e24\u4e2a\u6811\u7684\u961f\u5217\u81f3\u5c11\u6709\u4e00\u4e2a\u4e0d\u5b58\u5728\u7684\u65f6\u5019\u6267\u884c\u961f\u5217\u521b\u5efa\u6216\u8005\u590d\u5236\u64cd\u4f5c\n    if (queue1 === null) {\n      if (queue2 === null) {\n        // Neither fiber has an update queue. Create new ones.\n        //  \u4e24\u4e2a\u961f\u5217\u90fd\u6ca1\u6709\u5219\u6839\u636e\u5404\u81ea\u7684memoizedState\u521b\u5efaupdate\u961f\u5217\n        queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState);\n        queue2 = alternate.updateQueue = createUpdateQueue(\n          alternate.memoizedState,\n        );\n      } else {\n        // \u5982\u679c\u6709\u4e00\u4e2a\u6ca1\u6709\u5219\u590d\u5236\u53e6\u4e00\u4e2a\u961f\u5217\u7ed9\u5b83\n        // Only one fiber has an update queue. Clone to create a new one.\n        queue1 = fiber.updateQueue = cloneUpdateQueue(queue2);\n      }\n    } else {\n      if (queue2 === null) {\n        // \u5982\u679c\u6709\u4e00\u4e2a\u6ca1\u6709\u5219\u590d\u5236\u53e6\u4e00\u4e2a\u961f\u5217\u7ed9\u5b83\n        // Only one fiber has an update queue. Clone to create a new one.\n        queue2 = alternate.updateQueue = cloneUpdateQueue(queue1);\n      } else {\n        // Both owners have an update queue.\n      }\n    }\n  }\n\n  if (queue2 === null || queue1 === queue2) {\n    // There's only a single queue.\n    // \u5982\u679c\u53ea\u6709\u4e00\u4e2a\u6811\uff0c\u6216\u8005\u4e24\u68f5\u6811\u961f\u5217\u662f\u540c\u4e00\u4e2a\uff0c\u5219\u5c06\u4f20\u5165\u7684\u66f4\u65b0\u5bf9\u8c61\u6dfb\u52a0\u5230\u7b2c\u4e00\u4e2a\u961f\u5217\u4e2d\n    appendUpdateToQueue(queue1, update);\n  } else {\n    // There are two queues. We need to append the update to both queues,\n    // while accounting for the persistent structure of the list \u2014 we don't\n    // want the same update to be added multiple times.\n    //  \u5982\u679c\u4e24\u4e2a\u961f\u5217\u5b58\u5728\uff0c\u5219\u5c06\u66f4\u65b0\u4efb\u52a1\u52a0\u5165\u4e24\u4e2a\u961f\u5217\u4e2d\uff0c\u5e76\u907f\u514d\u88ab\u6dfb\u52a0\u591a\u6b21\n    if (queue1.lastUpdate === null || queue2.lastUpdate === null) {\n      // One of the queues is not empty. We must add the update to both queues.\n      //  \u6709\u4e00\u4e2a\u961f\u5217\u4e0d\u4e3a\u7a7a\uff0c\u5c06update\u6dfb\u52a0\u5230\u4e24\u4e2a\u961f\u5217\n      appendUpdateToQueue(queue1, update);\n      appendUpdateToQueue(queue2, update);\n    } else {\n      // Both queues are non-empty. The last update is the same in both lists,\n      // because of structural sharing. So, only append to one of the lists.\n      appendUpdateToQueue(queue1, update);\n      // But we still need to update the `lastUpdate` pointer of queue2.\n      queue2.lastUpdate = update;\n    }\n  }\n}\n")),(0,u.kt)("h4",{id:"processupdatequeue"},"processUpdateQueue"),(0,u.kt)("p",null,"\u901a\u8fc7\u591a\u4e2a\u540c\u6b65\u6267\u884c\u7684setState\u51fd\u6570\u7684\u4f5c\u7528\uff0c\u4e3afiber\u751f\u6210\u4e86\u5bf9\u5e94\u7684updateQueue\uff0c\u5e76\u4e14updateQueue\u4e2d\u7684\u6bcf\u4e2aupdate\u7684\u5230\u671f\u65f6\u95f4\u662f\u76f8\u540c\u7684\u3002\u6700\u7ec8\u5728\u8c03\u5ea6\u66f4\u65b0\u6811\u7684\u65f6\u5019\u4f1a\u8c03\u7528performWork\uff0c\u5176\u4e2d\u4f1a\u8c03\u7528updateClassInstance\uff0c\u5176\u4e2d\u4f1a\u8c03\u7528processUpdateQueue\u51fd\u6570\u6765\u5904\u7406\u4e4b\u524d\u6784\u5efa\u7684updateQueue\u3002\u53ea\u8003\u8651updateQueue\u4e2d\u7684update\uff0c\u7701\u7565CapturedUpdate\u76f8\u5173\u903b\u8f91\u4e4b\u540eprocessUpdateQueue\u90e8\u5206\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,u.kt)("pre",null,(0,u.kt)("code",{parentName:"pre"},"export function processUpdateQueue<State>(\n  workInProgress: Fiber,\n  queue: UpdateQueue<State>,\n  props: any,\n  instance: any,\n  renderExpirationTime: ExpirationTime,\n): void {\n  hasForceUpdate = false;\n\n  queue = ensureWorkInProgressQueueIsAClone(workInProgress, queue);\n\n  // These values may change as we process the queue.\n  let newBaseState = queue.baseState;\n  let newFirstUpdate = null;\n  let newExpirationTime = NoWork;\n\n  // Iterate through the list of updates to compute the result.\n  let update = queue.firstUpdate;\n  let resultState = newBaseState;\n  while (update !== null) {\n    const updateExpirationTime = update.expirationTime;\n    if (updateExpirationTime < renderExpirationTime) {\n      // This update does not have sufficient priority. Skip it.\n      if (newFirstUpdate === null) {\n        // This is the first skipped update. It will be the first update in\n        // the new list.\n        newFirstUpdate = update;\n        // Since this is the first update that was skipped, the current result\n        // is the new base state.\n        newBaseState = resultState;\n      }\n      // Since this update will remain in the list, update the remaining\n      // expiration time.\n      if (newExpirationTime < updateExpirationTime) {\n        newExpirationTime = updateExpirationTime;\n      }\n    } else {\n      // This update does have sufficient priority. Process it and compute\n      // a new result.\n      resultState = getStateFromUpdate(\n        workInProgress,\n        queue,\n        update,\n        resultState,\n        props,\n        instance,\n      );\n      const callback = update.callback;\n      if (callback !== null) {\n        workInProgress.effectTag |= Callback;\n        // Set this to null, in case it was mutated during an aborted render.\n        update.nextEffect = null;\n        if (queue.lastEffect === null) {\n          queue.firstEffect = queue.lastEffect = update;\n        } else {\n          queue.lastEffect.nextEffect = update;\n          queue.lastEffect = update;\n        }\n      }\n    }\n    // Continue to the next update.\n    update = update.next;\n  }\n\n  if (newFirstUpdate === null) {\n    queue.lastUpdate = null;\n  }\n\n  if (newFirstUpdate === null && newFirstCapturedUpdate === null) {\n    // We processed every update, without skipping. That means the new base\n    // state is the same as the result state.\n    newBaseState = resultState;\n  }\n\n  queue.baseState = newBaseState;\n  queue.firstUpdate = newFirstUpdate;\n\n  workInProgress.expirationTime = newExpirationTime;\n  workInProgress.memoizedState = resultState;\n}\n")),(0,u.kt)("p",null,"\u5728\u540c\u6b65\u591a\u6b21\u6267\u884csetState\u7684\u60c5\u51b5\u4e0b\uff0c\u5faa\u73af\u4e2d\u7684 if \u5224\u65ad\u6761\u4ef6newExpirationTime\u59cb\u7ec8\u4f1a\u7b49\u4e8erenderExpirationTime\uff0c\u56e0\u6b64\u4f1a\u5faa\u73af\u904d\u5386updateQueue\u961f\u5217\u4e2d\u7684update\uff0c\u5e76\u8c03\u7528getStateFromUpdate\u4e0d\u65ad\u4fee\u6539\u5408\u5e76state\uff0c\u5f97\u5230\u6700\u7ec8\u7684state\u5373resultState\u3002processUpdateQueue\u7684\u6700\u540e\u4f1a\u5c06\u5f97\u5230\u7684\u65b0\u7684state\u5b58\u50a8\u5230queue.baseState\uff0c\u5c06queue.firstUpdate\u7f6e\u4e3anull\u3002"),(0,u.kt)("p",null,"\u63a5\u4e0b\u6765\u901a\u8fc7getStateFromUpdate\u770b\u5982\u4f55\u5408\u5e76state\uff1a"),(0,u.kt)("pre",null,(0,u.kt)("code",{parentName:"pre"},"function getStateFromUpdate<State>(\n  workInProgress: Fiber,\n  queue: UpdateQueue<State>,\n  update: Update<State>,\n  prevState: State,\n  nextProps: any,\n  instance: any,\n): any {\n  switch (update.tag) {\n     ...\n    // Intentional fallthrough\n    case UpdateState: {\n      const payload = update.payload;\n      let partialState;\n      //\u4e24\u79cd\u4e0d\u540c\u7684setState\u65b9\u5f0f\uff1a\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u4e00\u4e2a\u5bf9\u8c61\u6216\u8005\u4e00\u4e2a\u51fd\u6570\n      if (typeof payload === 'function') {\n        // Updater function\n        partialState = payload.call(instance, prevState, nextProps);\n      } else {\n        // Partial state object\n        partialState = payload;\n      }\n      if (partialState === null || partialState === undefined) {\n        // Null and undefined are treated as no-ops.\n        // \u5982\u679c\u5408\u5e76\u540e\u7684state\u4e3anull\u6216\u8005undefined\u5219\u8fd4\u56de\u4e4b\u524d\u7684state\n        return prevState;\n      }\n      // Merge the partial state and the previous state.\n      // \u5408\u5e76state\uff0c\u5e76\u8fd4\u56de\uff0cObject.assign\u8fd9\u91cc\u662f\u7b2c\u4e00\u5c42\u6df1\u62f7\u8d1d\uff0c\u5982\u679cstate\u6bd4\u8f83\u590d\u6742\uff0c\u5c31\u4f1a\u5b58\u5728\u6df1\u5c42\u5c5e\u6027\u6d45\u62f7\u8d1d\u7684\u73b0\u8c61\n      return Object.assign({}, prevState, partialState);\n    }\n    ...\n  }\n  return prevState;\n}\n")),(0,u.kt)("p",null,"\u7531\u4e8e\u8fd9\u91cc\u53ea\u770bsetState\uff0c\u56e0\u6b64\u7701\u7565\u4e86\u90e8\u5206\u4ee3\u7801\u3002\u8fd9\u91cc\u53ef\u4ee5\u5f88\u6e05\u6670\u7684\u770b\u5230state\u7684\u5408\u5e76\u673a\u5236\uff0csetState\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u6709\u4e24\u79cd\u65b9\u5f0f\uff1a"),(0,u.kt)("pre",null,(0,u.kt)("code",{parentName:"pre"},"1\u3001\u5bf9\u8c61\u5f62\u5f0f\n2\u3001\u51fd\u6570\u5f62\u5f0f\n    (prevState, nextProps) => {\n      return {...};\n    }\n")),(0,u.kt)("ul",null,(0,u.kt)("li",{parentName:"ul"},"\u5bf9\u8c61\u5f62\u5f0f\uff1a\u4f1a\u76f4\u63a5\u5c06\u5f53\u524d\u7684setState\u4e2d\u7684\u65b0\u7684state\u4f5c\u4e3apartialState\uff0c\u7136\u540e\u5229\u7528Object.assign({}, prevState, partialState)\u5c06\u4e0a\u4e00\u6b21setState\u4e4b\u540e\u7684state\u4e0e\u5f53\u524d\u7684\u65b0\u7684state\u5408\u5e76\u5230\u4e00\u4e2a\u65b0\u7684\u5bf9\u8c61\u4e0a\u3002"),(0,u.kt)("li",{parentName:"ul"},"\u51fd\u6570\u5f62\u5f0f\uff1a\u5229\u7528\u8be5\u51fd\u6570\u5bf9\u4e0a\u4e00\u6b21setState\u4e4b\u540e\u7684state\u4e0e\u4e0b\u4e00\u6b21\u7684props\u8fdb\u884c\u8ba1\u7b97\u540e\u8fd4\u56de\u7684\u5bf9\u8c61\u4f5c\u4e3a\u5f53\u524d\u65b0\u7684state\uff0c\u5e76\u5b58\u50a8\u5728partialState\uff0c\u6700\u540e\u4e0eprevState\u5408\u5e76\u5230\u65b0\u7684\u5bf9\u8c61\u4e0a\u3002")),(0,u.kt)("h4",{id:"\u4e0b\u9762\u4ee3\u7801state\u6700\u7ec8\u4f1a\u662f5"},"\u4e0b\u9762\u4ee3\u7801state\u6700\u7ec8\u4f1a\u662f5\uff1a"),(0,u.kt)("pre",null,(0,u.kt)("code",{parentName:"pre"},"state\u521d\u59cb\u503c\u4e3a{a:1}\nclickHandler(){\n    this.setState((prevState, nextProps) => {\n      return {a:prevState.a + 1};\n    })\n    this.setState((prevState, nextProps) => {\n      return {a:prevState.a + 1};\n    })\n    this.setState((prevState, nextProps) => {\n      return {a:prevState.a + 1};\n    })\n    this.setState((prevState, nextProps) => {\n      return {a:prevState.a + 1};\n    })\n}\n")))}d.isMDXComponent=!0}}]);